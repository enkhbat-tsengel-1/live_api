AWSTemplateFormatVersion: 2010-09-09
Transform:
  - AWS::Serverless-2016-10-31
  - AWS::CodeStar

Parameters:
  ProjectId:
    Type: String
    Description: AWS CodeStar projectID used to associate new resources to team members
  CodeDeployRole:
    Type: String
    Description: IAM role to allow AWS CodeDeploy to manage deployment of AWS Lambda functions
  Stage:
    Type: String
    Description: The name for a project pipeline stage, such as Staging or Prod, for which resources are provisioned and deployed.
    Default: ""

Globals:
  Function:
    AutoPublishAlias: live
    DeploymentPreference:
      Enabled: false
      Type: Canary10Percent5Minutes
      Role: !Ref CodeDeployRole

Resources:
  CreateChannel:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.createChannel
      Runtime: nodejs12.x
      Events:
        GetEvent:
          Type: Api
          Properties:
            Path: /channel
            Method: post
      Role:
        Fn::GetAtt:
          - LambdaExecutionRole
          - Arn

  GetChannel:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.getChannel
      Runtime: nodejs12.x
      Events:
        GetEvent:
          Type: Api
          Properties:
            Path: /channel/${id}
            Method: get
      Role:
        Fn::GetAtt:
          - LambdaExecutionRole
          - Arn
  ListStream:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.listStream
      Runtime: nodejs12.x
      Events:
        GetEvent:
          Type: Api
          Properties:
            Path: /stream
            Method: get
      Role:
        Fn::GetAtt:
          - LambdaExecutionRole
          - Arn
  GetStream:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.getStream
      Runtime: nodejs12.x
      Events:
        GetEvent:
          Type: Api
          Properties:
            Path: /stream/{id}
            Method: get
      Role:
        Fn::GetAtt:
          - LambdaExecutionRole
          - Arn

  LambdaExecutionRole:
    Description: Creating service role in IAM for AWS Lambda
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "CodeStar-${ProjectId}-Execution${Stage}"
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: [lambda.amazonaws.com]
            Action: sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - !Sub "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
      PermissionsBoundary: !Sub "arn:${AWS::Partition}:iam::${AWS::AccountId}:policy/CodeStar_${ProjectId}_PermissionsBoundary"
      Policies:
        - PolicyName: ivsAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: "ivs:*"
                Resource: "*"
